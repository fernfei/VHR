<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fern.vhr.mapper.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="com.fern.vhr.model.Employee" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="CHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="idCard" property="idcard" jdbcType="CHAR" />
    <result column="wedlock" property="wedlock" jdbcType="CHAR" />
    <result column="nationId" property="nationid" jdbcType="INTEGER" />
    <result column="nativePlace" property="nativeplace" jdbcType="VARCHAR" />
    <result column="politicId" property="politicid" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="departmentId" property="departmentid" jdbcType="INTEGER" />
    <result column="jobLevelId" property="joblevelid" jdbcType="INTEGER" />
    <result column="posId" property="posid" jdbcType="INTEGER" />
    <result column="engageForm" property="engageform" jdbcType="VARCHAR" />
    <result column="tiptopDegree" property="tiptopdegree" jdbcType="CHAR" />
    <result column="specialty" property="specialty" jdbcType="VARCHAR" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="beginDate" property="begindate" jdbcType="DATE" />
    <result column="workState" property="workstate" jdbcType="CHAR" />
    <result column="workID" property="workid" jdbcType="CHAR" />
    <result column="contractTerm" property="contractterm" jdbcType="DOUBLE" />
    <result column="conversionTime" property="conversiontime" jdbcType="DATE" />
    <result column="notWorkDate" property="notworkdate" jdbcType="DATE" />
    <result column="beginContract" property="begincontract" jdbcType="DATE" />
    <result column="endContract" property="endcontract" jdbcType="DATE" />
    <result column="workAge" property="workage" jdbcType="INTEGER" />
  </resultMap>

  <resultMap id="EmployeeWithPage" type="com.fern.vhr.model.Employee" extends="BaseResultMap">
    <association property="nation" javaType="com.fern.vhr.model.Nation">
      <id column="nid" property="id"/>
      <result column="nname" property="name"/>
    </association>
    <association property="politicsstatus" javaType="com.fern.vhr.model.Politicsstatus">
      <id column="polId" property="id"/>
      <result column="polName" property="name"/>
    </association>
    <association property="department" javaType="com.fern.vhr.model.Department">
      <id column="depId" property="id"/>
      <result column="depName" property="name"/>
    </association>
    <association property="jobLevel" javaType="com.fern.vhr.model.JobLevel">
      <id column="jid" property="id"/>
      <result column="jname" property="name"/>
    </association>
    <association property="position" javaType="com.fern.vhr.model.Position">
      <id column="posId" property="id"/>
      <result column="posName" property="name"/>
    </association>
  </resultMap>
  <select id="getEmployee" resultMap="EmployeeWithPage">
       SELECT
          emp.*, nat.id AS nid,
          nat. NAME AS nname,
          pol.id AS polId,
          pol. NAME AS polName,
          dep.id AS depId,
          dep. NAME AS depName,
          job.id AS jid,
          job. NAME AS jname,
          pos.id AS posId,
          pos.name AS posName
      FROM
          employee AS emp,
          nation AS nat,
          politicsstatus AS pol,
          department AS dep,
          joblevel AS job,
          position AS pos
      WHERE
          emp.nationId = nat.id
      AND emp.politicId = pol.id
      AND emp.departmentId = dep.id
      AND emp.jobLevelId = job.id
      AND emp.posId = pos.id
      <if test="keywords!=null and keywords!=''">
        AND emp.name like concat('%',#{keywords},'%')
      </if>
      <if test="page!=null and size!=null">
        limit  #{page},#{size}
      </if>
  </select>


  <select id="getEmployeeById" resultMap="EmployeeWithPage">
    SELECT
    emp.*, nat.id AS nid,
    nat. NAME AS nname,
    pol.id AS polId,
    pol. NAME AS polName,
    dep.id AS depId,
    dep. NAME AS depName,
    job.id AS jid,
    job. NAME AS jname,
    pos.id AS posId,
    pos.name AS posName
    FROM
    employee AS emp,
    nation AS nat,
    politicsstatus AS pol,
    department AS dep,
    joblevel AS job,
    position AS pos
    WHERE
    emp.nationId = nat.id
    AND emp.politicId = pol.id
    AND emp.departmentId = dep.id
    AND emp.jobLevelId = job.id
    AND emp.posId = pos.id
    and emp.id=#{id}
  </select>


    <select id="getWorkId" resultType="java.lang.Integer">
    SELECT workID FROM employee ORDER BY id DESC LIMIT 1
  </select>

    <select id="getTotal" resultType="java.lang.Integer">
    select count(*) from employee
    <if test="keywords!=null and keywords!=''">
      where employee.name like concat('%',#{keywords},'%')
    </if>
  </select>

  <select id="getTotalWithAdvancedSearch" resultType="java.lang.Integer">
    select count(*) from employee where 1=1
    <if test="employee.politicid!=null and employee.politicid!=''">
      AND  politicId = #{employee.politicid}
    </if>
    <if test="employee.joblevelid!=null and employee.joblevelid!=''">
      AND jobLevelId = #{employee.joblevelid}
    </if>
    <if test="employee.departmentid!=null and employee.departmentid!=''">
      AND departmentId = #{employee.departmentid}
    </if>
    <if test="employee.posid!=null and employee.posid!=''">
      AND posId = #{employee.posid}
    </if>
    <if test="employee.engageform!=null and employee.engageform!=''">
      AND engageForm = #{employee.engageform}
    </if>
    <if test="beginDate!=null  and endDate!=null ">
      AND beginDate  BETWEEN #{beginDate} AND #{endDate}
    </if>

  </select>





  <select id="advancedSearch" resultMap="EmployeeWithPage">
    SELECT
    emp.*, nat.id AS nid,
    nat. NAME AS nname,
    pol.id AS polId,
    pol. NAME AS polName,
    dep.id AS depId,
    dep. NAME AS depName,
    job.id AS jid,
    job. NAME AS jname,
    pos.id AS posId,
    pos. NAME AS posName
    FROM
    employee AS emp,
    nation AS nat,
    politicsstatus AS pol,
    department AS dep,
    joblevel AS job,
    position AS pos
    WHERE
    emp.nationId = nat.id
    AND emp.politicId = pol.id
    AND emp.departmentId = dep.id
    AND emp.jobLevelId = job.id
    AND emp.posId = pos.id

    <if test="employee.politicid!=null and employee.politicid!=''">
      AND politicId = #{employee.politicid}
    </if>
    <if test="employee.joblevelid!=null and employee.joblevelid!=''">
      AND jobLevelId = #{employee.joblevelid}
    </if>
    <if test="employee.departmentid!=null and employee.departmentid!=''">
      AND departmentId = #{employee.departmentid}
    </if>
    <if test="employee.engageform!=null and employee.engageform!=''">
      AND engageForm = #{employee.engageform}
    </if>
    <if test="employee.posid!=null and employee.posid!=''">
      AND posId = #{employee.posid}
    </if>
    <if test="beginDate!=null and endDate!=null ">
      AND beginDate  BETWEEN #{beginDate} AND #{endDate}
    </if>
    <if test="page!=null and size!=null">
      limit  #{page},#{size}
    </if>
  </select>

  <sql id="Base_Column_List" >
    id, name, gender, birthday, idCard, wedlock, nationId, nativePlace, politicId, email, 
    phone, address, departmentId, jobLevelId, posId, engageForm, tiptopDegree, specialty, 
    school, beginDate, workState, workID, contractTerm, conversionTime, notWorkDate, 
    beginContract, endContract, workAge
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>


  <delete id="deleteEmployeeByIdByIds" parameterType="java.util.Arrays">
    delete from employee
    where id in
    <foreach collection="ids" item="id" open="(" separator="," close=")">
        #{id}
    </foreach>
  </delete>

  <!--批量导入-->

  <insert id="addEmployees" parameterType="java.util.List">
    insert into employee (name, gender,
      birthday, idCard, wedlock, nationId,
      nativePlace, politicId, email,
      phone, address, departmentId,
      jobLevelId, posId, engageForm,
      tiptopDegree, specialty, school,
      beginDate, workState, workID,
      contractTerm, conversionTime, notWorkDate,
      beginContract, endContract, workAge
      )
      values
      <foreach collection="list" item="emp" separator="," >
        (#{emp.name,jdbcType=VARCHAR}, #{emp.gender,jdbcType=CHAR},
        #{emp.birthday,jdbcType=DATE}, #{emp.idcard,jdbcType=CHAR}, #{emp.wedlock,jdbcType=CHAR}, #{emp.nationid,jdbcType=INTEGER},
        #{emp.nativeplace,jdbcType=VARCHAR}, #{emp.politicid,jdbcType=INTEGER}, #{emp.email,jdbcType=VARCHAR},
        #{emp.phone,jdbcType=VARCHAR}, #{emp.address,jdbcType=VARCHAR}, #{emp.departmentid,jdbcType=INTEGER},
        #{emp.joblevelid,jdbcType=INTEGER}, #{emp.posid,jdbcType=INTEGER}, #{emp.engageform,jdbcType=VARCHAR},
        #{emp.tiptopdegree,jdbcType=CHAR}, #{emp.specialty,jdbcType=VARCHAR}, #{emp.school,jdbcType=VARCHAR},
        #{emp.begindate,jdbcType=DATE}, #{emp.workstate,jdbcType=CHAR}, #{emp.workid,jdbcType=CHAR},
        #{emp.contractterm,jdbcType=DOUBLE}, #{emp.conversiontime,jdbcType=DATE}, #{emp.notworkdate,jdbcType=DATE},
        #{emp.begincontract,jdbcType=DATE}, #{emp.endcontract,jdbcType=DATE}, #{emp.workage,jdbcType=INTEGER}
        )
      </foreach>
  </insert>

  <insert id="insert" parameterType="com.fern.vhr.model.Employee" >
    insert into employee (id, name, gender, 
      birthday, idCard, wedlock, nationId, 
      nativePlace, politicId, email, 
      phone, address, departmentId, 
      jobLevelId, posId, engageForm, 
      tiptopDegree, specialty, school, 
      beginDate, workState, workID, 
      contractTerm, conversionTime, notWorkDate, 
      beginContract, endContract, workAge
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, 
      #{birthday,jdbcType=DATE}, #{idcard,jdbcType=CHAR}, #{wedlock,jdbcType=CHAR}, #{nationid,jdbcType=INTEGER}, 
      #{nativeplace,jdbcType=VARCHAR}, #{politicid,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{departmentid,jdbcType=INTEGER}, 
      #{joblevelid,jdbcType=INTEGER}, #{posid,jdbcType=INTEGER}, #{engageform,jdbcType=VARCHAR}, 
      #{tiptopdegree,jdbcType=CHAR}, #{specialty,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, 
      #{begindate,jdbcType=DATE}, #{workstate,jdbcType=CHAR}, #{workid,jdbcType=CHAR}, 
      #{contractterm,jdbcType=DOUBLE}, #{conversiontime,jdbcType=DATE}, #{notworkdate,jdbcType=DATE}, 
      #{begincontract,jdbcType=DATE}, #{endcontract,jdbcType=DATE}, #{workage,jdbcType=INTEGER}
      )
  </insert>

  <insert id="insertSelective" parameterType="com.fern.vhr.model.Employee" useGeneratedKeys="true" keyProperty="id">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null and id != ''" >
        id,
      </if>
      <if test="name != null and name != ''" >
        name,
      </if>
      <if test="gender != null and gender != ''" >
        gender,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="idcard != null and idcard != ''" >
        idCard,
      </if>
      <if test="wedlock != null and wedlock != ''" >
        wedlock,
      </if>
      <if test="nationid != null and nationid != ''" >
        nationId,
      </if>
      <if test="nativeplace != null and nativeplace != ''" >
        nativePlace,
      </if>
      <if test="politicid != null and politicid != ''" >
        politicId,
      </if>
      <if test="email != null and email != ''" >
        email,
      </if>
      <if test="phone != null and phone != ''" >
        phone,
      </if>
      <if test="address != null and address != ''" >
        address,
      </if>
      <if test="departmentid != null and departmentid != ''" >
        departmentId,
      </if>
      <if test="joblevelid != null and joblevelid != ''" >
        jobLevelId,
      </if>
      <if test="posid != null and posid != ''" >
        posId,
      </if>
      <if test="engageform != null and engageform != ''" >
        engageForm,
      </if>
      <if test="tiptopdegree != null and tiptopdegree != ''" >
        tiptopDegree,
      </if>
      <if test="specialty != null and specialty != ''" >
        specialty,
      </if>
      <if test="school != null and school != ''" >
        school,
      </if>
      <if test="begindate != null" >
        beginDate,
      </if>
      <if test="workstate != null and workstate != ''" >
        workState,
      </if>
      <if test="workid != null and workid != ''" >
        workID,
      </if>
      <if test="contractterm != null and contractterm != ''" >
        contractTerm,
      </if>
      <if test="conversiontime != null " >
        conversionTime,
      </if>
      <if test="notworkdate != null " >
        notWorkDate,
      </if>
      <if test="begincontract != null " >
        beginContract,
      </if>
      <if test="endcontract != null" >
        endContract,
      </if>
      <if test="workage != null and workage != ''" >
        workAge,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null and id != ''" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null and name != ''" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null and gender != ''" >
        #{gender,jdbcType=CHAR},
      </if>
      <if test="birthday != null " >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="idcard != null and idcard != ''" >
        #{idcard,jdbcType=CHAR},
      </if>
      <if test="wedlock != null and wedlock != ''" >
        #{wedlock,jdbcType=CHAR},
      </if>
      <if test="nationid != null and nationid != ''" >
        #{nationid,jdbcType=INTEGER},
      </if>
      <if test="nativeplace != null and nativeplace != ''" >
        #{nativeplace,jdbcType=VARCHAR},
      </if>
      <if test="politicid != null and politicid != ''" >
        #{politicid,jdbcType=INTEGER},
      </if>
      <if test="email != null and email != ''" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null and phone != ''" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null and address != ''" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="departmentid != null and departmentid != ''" >
        #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="joblevelid != null and joblevelid != ''" >
        #{joblevelid,jdbcType=INTEGER},
      </if>
      <if test="posid != null and posid != ''" >
        #{posid,jdbcType=INTEGER},
      </if>
      <if test="engageform != null and engageform != ''" >
        #{engageform,jdbcType=VARCHAR},
      </if>
      <if test="tiptopdegree != null and tiptopdegree != ''" >
        #{tiptopdegree,jdbcType=CHAR},
      </if>
      <if test="specialty != null and specialty != ''" >
        #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="school != null and school != ''" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="begindate != null " >
        #{begindate,jdbcType=DATE},
      </if>
      <if test="workstate != null and workstate != ''" >
        #{workstate,jdbcType=CHAR},
      </if>
      <if test="workid != null and workid != ''" >
        #{workid,jdbcType=CHAR},
      </if>
      <if test="contractterm != null " >
        #{contractterm,jdbcType=DOUBLE},
      </if>
      <if test="conversiontime != null " >
        #{conversiontime,jdbcType=DATE},
      </if>
      <if test="notworkdate != null " >
        #{notworkdate,jdbcType=DATE},
      </if>
      <if test="begincontract != null " >
        #{begincontract,jdbcType=DATE},
      </if>
      <if test="endcontract != null " >
        #{endcontract,jdbcType=DATE},
      </if>
      <if test="workage != null and workage != ''" >
        #{workage,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fern.vhr.model.Employee" >
    update employee
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="idcard != null" >
        idCard = #{idcard,jdbcType=CHAR},
      </if>
      <if test="wedlock != null" >
        wedlock = #{wedlock,jdbcType=CHAR},
      </if>
      <if test="nationid != null" >
        nationId = #{nationid,jdbcType=INTEGER},
      </if>
      <if test="nativeplace != null" >
        nativePlace = #{nativeplace,jdbcType=VARCHAR},
      </if>
      <if test="politicid != null" >
        politicId = #{politicid,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="departmentid != null" >
        departmentId = #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="joblevelid != null" >
        jobLevelId = #{joblevelid,jdbcType=INTEGER},
      </if>
      <if test="posid != null" >
        posId = #{posid,jdbcType=INTEGER},
      </if>
      <if test="engageform != null" >
        engageForm = #{engageform,jdbcType=VARCHAR},
      </if>
      <if test="tiptopdegree != null" >
        tiptopDegree = #{tiptopdegree,jdbcType=CHAR},
      </if>
      <if test="specialty != null" >
        specialty = #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="begindate != null" >
        beginDate = #{begindate,jdbcType=DATE},
      </if>
      <if test="workstate != null" >
        workState = #{workstate,jdbcType=CHAR},
      </if>
      <if test="workid != null" >
        workID = #{workid,jdbcType=CHAR},
      </if>
      <if test="contractterm != null" >
        contractTerm = #{contractterm,jdbcType=DOUBLE},
      </if>
      <if test="conversiontime != null" >
        conversionTime = #{conversiontime,jdbcType=DATE},
      </if>
      <if test="notworkdate != null" >
        notWorkDate = #{notworkdate,jdbcType=DATE},
      </if>
      <if test="begincontract != null" >
        beginContract = #{begincontract,jdbcType=DATE},
      </if>
      <if test="endcontract != null" >
        endContract = #{endcontract,jdbcType=DATE},
      </if>
      <if test="workage != null" >
        workAge = #{workage,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fern.vhr.model.Employee" >
    update employee
    set name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=DATE},
      idCard = #{idcard,jdbcType=CHAR},
      wedlock = #{wedlock,jdbcType=CHAR},
      nationId = #{nationid,jdbcType=INTEGER},
      nativePlace = #{nativeplace,jdbcType=VARCHAR},
      politicId = #{politicid,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      departmentId = #{departmentid,jdbcType=INTEGER},
      jobLevelId = #{joblevelid,jdbcType=INTEGER},
      posId = #{posid,jdbcType=INTEGER},
      engageForm = #{engageform,jdbcType=VARCHAR},
      tiptopDegree = #{tiptopdegree,jdbcType=CHAR},
      specialty = #{specialty,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      beginDate = #{begindate,jdbcType=DATE},
      workState = #{workstate,jdbcType=CHAR},
      workID = #{workid,jdbcType=CHAR},
      contractTerm = #{contractterm,jdbcType=DOUBLE},
      conversionTime = #{conversiontime,jdbcType=DATE},
      notWorkDate = #{notworkdate,jdbcType=DATE},
      beginContract = #{begincontract,jdbcType=DATE},
      endContract = #{endcontract,jdbcType=DATE},
      workAge = #{workage,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>